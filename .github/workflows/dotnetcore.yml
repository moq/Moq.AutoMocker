name: Continuous

on:
  pull_request:
  push:
    branches: [ master ]
    tags:
    - 'v*'
    paths:
    - '!README.md'
    - '!docs/**'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404

  # Run unit tests
    - name: Test
      run: dotnet test --configuration Release --verbosity normal

  # Set build properties
    - name: Set build version
      shell: pwsh
      run: |
        # If we're a tag, force VersionPrefix to the tag value
        if ('${{ github.ref }}' -match '^refs/tags/v') {
          if ($match = [regex]::Match('${{ github.ref }}', '^refs/tags/v([0-9]+(\.[0-9]+){1,2})') -and $match.Success) {
            Add-Content "VersionPrefix=$($match.Groups[1].Value)" $env:GITHUB_ENV -Encoding utf8
          } else {
            throw 'Invalid tag version: ${{ github.ref }}'
          }
        }

        # Pushes to a branch get a CI suffix
        if ('${{ github.ref }}' -match '^refs/heads/') {
          Add-Content 'VersionSuffix=ci' $env:GITHUB_ENV -Encoding utf8
        }

        # Every build should have the revision set
        Add-Content 'Revision=${{ github.run_number }}' $env:GITHUB_ENV -Encoding utf8


  # NuGet Release
    - name: Pack
      if: github.event_name == 'push'
      run: dotnet pack --configuration Release --verbosity normal --output .
    - name: Publish
      if: github.event_name == 'push'
      run: dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate

  # GitHub Releases
    - name: Create Release
      if: github.event_name == 'push' 
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        prerelease: ${{ env.VersionSuffix != '' }}
